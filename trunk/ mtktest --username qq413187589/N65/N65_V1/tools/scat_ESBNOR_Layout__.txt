;/*****************************************************************************
;*  Copyright Statement:
;*  --------------------
;*  This software is protected by Copyright and the information contained
;*  herein is confidential. The software may not be copied and the information
;*  contained herein may not be used or disclosed except with the written
;*  permission of MediaTek Inc. (C) 2007
;*
;*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
;*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
;*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
;*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
;*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
;*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
;*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
;*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
;*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
;*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
;*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
;*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
;*
;*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
;*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
;*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
;*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
;*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
;*
;*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
;*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
;*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
;*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
;*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
;*
;*****************************************************************************/
;
;/*****************************************************************************
; *
; * Filename:
; * ---------
; *   scat_ESBNOR_Layout__.txt
; *
; * Project:
; * --------
; *   Maui_Software
; *
; * Description:
; * ------------
; *   Example for Enhanced Single Bank NOR scatter file 
; *
; * Author:
; * -------
; *   Produced by system service team
; *
; ****************************************************************************/
; *============================================================================
; *             HISTORY
; * Below this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
; *----------------------------------------------------------------------------
; * $Revision:$
; * $Modtime:$
; * $Log:$
; *
; * Oct 2 2007 mtk01077
; * [MAUI_00555137] [Custom] ScatGen Revise for SBNOR affected input sections
; * 
; *
; * Sep 27 2007 mtk01077
; * [MAUI_00553152] [Custom] ScatGen revise for MT6223 SINGLE BANK CODE
; * 
; *
; * Sep 12 2007 mtk01077
; * [MAUI_00546461] [Custom] update scatter file template
; * 
; *----------------------------------------------------------------------------
; * Upper this line, this part is controlled by PVCS VM. DO NOT MODIFY!!
;*=============================================================================
;*****************************************************************************/
;
;--------------------
; SCHEME   : external 12.25MB flash memory and 4MB SRAM
; PLATFORM : MT6225
;--------------------

ROM 0x08000000 [0x00c40000]
{
    ROM 0x08000000 0x00400000
    {
    }
    ROM2 +0x0 0x00400000
    {
    }
    ROM3 +0x0 0x00400000
    {
    }
    ROM4 +0x0 
    {
    }
    SINGLE_BANK_CODE 0x00000140
    {
;for single bank support , certain following code need to be called by sleep manager
         bootarm.obj (SNORCODE,+First)
         Drvflash.obj (SNORCODE,SNORCONST)
         nor_test.obj(SNORCODE)
         flash_mtd.obj (SNORCODE)
         flash_mtd.intel.obj (SNORCODE)
         flash_mtd.amd.obj (SNORCODE)
         m11301.obj (SNORCODE)
    }
    EXTSRAM_LARGEPOOL_NORMAL 0x00002000
    {
    }
    EXTSRAM +0x00 
    {
    }
    DUMMY_END [0x00400000] 0x04
    {
    }
    INTSRAM_CODE 0xA0000000 0x7600
    {
; [NOTE] Only ESBNOR feature related input section shown here
        SST_intrCtrl.obj (INTERNCODE, INTERNCONST)
        callvia.o (+RO)
        uread4.o (+RO)
        uwrite4.o (+RO)
        init.obj (SNORCODE)
        *l1dsm.obj (SNORCODE)
    }
    INTSRAM_DATA 0xA0007600 0x5A00
    {
    }   
    DYNAMIC_CODE1 0xa000d000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE3 0xa000d000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE4 0xa000d000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE5 0xa000d000 OVERLAY 0x5000
    {
    }
    INTSRAM_MULTIMEDIA 0x40000000 0xC000
    {
    }
}

;--------------------
; SCHEME   : external 12.25MB flash memory and 4MB SRAM
; PLATFORM : MT6223
;--------------------

ROM 0x08000000 [0x00c40000]
{
    ROM 0x08000000 0x00400000
    {
    }
    ROM2 +0x0 0x00400000
    {
    }
    ROM3 +0x0 0x00400000
    {
    }
    ROM4 +0x0 
    {
    }
    SINGLE_BANK_CODE 0x00000140
    {
;for single bank support , certain following code need to be called by sleep manager
         bootarm.obj (SNORCODE,+First)
         SST_intrCtrl.obj (INTERNCODE, INTERNCONST)
         Drvflash.obj (SNORCODE,SNORCONST)
         nor_test.obj(SNORCODE)
         flash_mtd.obj (SNORCODE)
         flash_mtd.intel.obj (SNORCODE)
         flash_mtd.amd.obj (SNORCODE)
         *l1dsm.obj (SNORCODE)
         m11301.obj (SNORCODE)
         init.obj (SNORCODE)
         callvia.o (+RO)
         uread4.o (+RO)
         uwrite4.o (+RO)
    }
    EXTSRAM_LARGEPOOL_NORMAL 0x00002000
    {
    }
    EXTSRAM +0x00 
    {
    }
    EXTSRAM_DSP_TX [0x003fc000] 0x2000
    {
    }
    EXTSRAM_DSP_RX [0x003fe000] 0x2000
    {
    }
    INTSRAM 0x40000000 0x7600
    {
    }
    DYNAMIC_CODE3 0x40008D80 OVERLAY 0x1280
    {
    }
    DYNAMIC_CODE5 0x40008D80 OVERLAY 0x1280
    {
    }
}

;--------------------
; SCHEME   : external 7MB flash memory and 1MB SRAM
; PLATFORM : MT6205B
;--------------------

ROM 0x00000000 0x00700000
{
    ROM 0x00000000 0x00400000
    {
    }
    ROM2 +0x0 0x00400000
    {
    }
    ROM3 +0x0 0x00400000
    {
    }
    ROM4 +0x0 0x00400000
    {
    }
    ROM5 +0x0 
    {
    }
    SINGLE_BANK_CODE 0x10000000
    {
;for single bank support , certain following code need to be called by sleep manager
         Drvflash.obj (SNORCODE)
         nor_test.obj (SNORCODE)
         flash_mtd.intel.obj (SNORCODE)
         flash_mtd.amd.obj (SNORCODE)
         m11301.obj (SNORCODE)
         kal_nucleus_initialize.obj(SNORCODE)
         kal_threadx_initialize.obj(SNORCODE)
         ex_item.obj (SNORCODE)
    }
    EXTSRAM 0x10002000 
    {
    }
    DUMMY_END 0x10100000 0x04
    {
    }
    INTSRAM 0x40000000 0x00008000
    {
; [NOTE] Only ESBNOR feature related input section shown here
; system-realted CODE/RW/ZI , SINGLE-BANK set
         bootarm.obj (STACK_POOL_INTSRAM, INTERNCODE, SNORCODE)
         init.obj (SNORCODE)
         SST_intrCtrl.obj (INTERNCODE, INTERNCONST)
; common C library
         callvia.o (+RO)
         uread4.o (+RO)
         uwrite4.o (+RO)
; Enhanced Single Bank Support
         Drvflash.obj (INTERNCODE, SNORCONST)
         flash_mtd.obj (SNORCODE, SNORRW, SNORZI)
         flash_mtd.intel.obj (INTERNCODE)
         flash_mtd.amd.obj (INTERNCODE)
         *l1dsm.obj (SNORCODE)
    }
}

;--------------------
; SCHEME   : external 16MB flash memory and 8MB SRAM
; PLATFORM : MT6227
;--------------------

ROM 0x08000000 0x01000000
{
    ROM 0x08000000 0x00400000
    {
    }
    ROM2 +0x0 0x00400000
    {
    }
    ROM3 +0x0 0x00400000
    {
    }
    ROM4 +0x0 0x00400000
    {
    }
    ROM5 +0x0 
    {
    }
    SINGLE_BANK_CODE 0x00000140
    {
;for single bank support , certain following code need to be called by sleep manager
         bootarm.obj (SNORCODE,+First)
         Drvflash.obj (SNORCODE,SNORCONST)
         nor_test.obj(SNORCODE)
         flash_mtd.obj (SNORCODE)
         flash_mtd.intel.obj (SNORCODE)
         flash_mtd.amd.obj (SNORCODE)
         m11301.obj (SNORCODE)
    }
    EXTSRAM_LARGEPOOL_NORMAL 0x00002000
    {
    }
    EXTSRAM +0x00 
    {
    }
    DUMMY_END 0x00800000 0x04
    {
    }
    INTSRAM_CODE 0x40000380 0x0000FD00
    {
; [NOTE] Only ESBNOR feature related input section shown here
; system-realted CODE , STANDARD set
         init.obj (SNORCODE)
         SST_intrCtrl.obj (INTERNCODE, INTERNCONST)
; common used C library
         callvia.o (+RO)
         uread4.o (+RO)
         uwrite4.o (+RO)
; INTSRAM_CODE_OBJ_others_6227
         *l1dsm.obj (SNORCODE)
    }
    INTSRAM_DATA 0x40010080 0x00008780
    {
    }
    DYNAMIC_CODE1 0x40018800 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE2 0x40018800 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE3 0x40018800 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE4 0x40018800 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE5 0x40018800 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE6 0x40018800 OVERLAY 0x5000
    {
    }
    INTSRAM_MULTIMEDIA 0x4001D800 0x00029800
    {
    }
}

;--------------------
; SCHEME   : external 3MB flash memory and 2MB SRAM
; PLATFORM : MT6229
;--------------------

ROM 0x08000000 0x00300000
{
    ROM 0x08000000 0x800
    {
    }
    ROM0 0x08001000 FIXED ;4KB
    {
    }
    ROM1 +0x0 0x00400000
    {
    }
    ROM2 +0x0 0x00400000
    {
    }
    ROM3 +0x0 0x00400000
    {
    }
    ROM4 +0x0 0x00400000
    {
    }
    ROM5 +0x0 
    {
    }
    ROM_TAIL +0x0 
    {
    }
    SINGLE_BANK_CODE 0x00000140
    {
;for single bank support , certain following code need to be called by sleep manager
         bootarm.obj (SNORCODE,+First)
         Drvflash.obj (SNORCODE,SNORCONST)
         nor_test.obj(SNORCODE)
         flash_mtd.obj (SNORCODE)
         flash_mtd.intel.obj (SNORCODE)
         flash_mtd.amd.obj (SNORCODE)
         m11301.obj (SNORCODE)
    }
    EXTSRAM_LARGEPOOL_NORMAL 0x00002000
    {
    }
    EXTSRAM +0x00 
    {
    }
    EXTSRAM_DSP_TX 0x001c0000 0x20000
    {
    }
    EXTSRAM_DSP_RX 0x001e0000 0x20000
    {
    }
    INTSRAM_CODE 0xA0000000 0x00010400
    {
; [NOTE] Only ESBNOR feature related input section shown here
; system-realted CODE , STANDARD set
         init.obj (SNORCODE)
         SST_intrCtrl.obj (INTERNCODE, INTERNCONST)
; common used C library
         callvia.o (+RO)
         uread4.o (+RO)
         uwrite4.o (+RO)
; INTSRAM_CODE_OBJ_others_6228
         *l1dsm.obj (SNORCODE)
    }
    INTSRAM_DATA 0xA0010400 0x00008400
    {
    }
    DYNAMIC_CODE2 0xa0018800 OVERLAY 0x2800
    {
    }
    DYNAMIC_CODE1 0xa001b000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE3 0xa001b000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE4 0xa001b000 OVERLAY 0x5000
    {
    }
    DYNAMIC_CODE5 0xa001b000 OVERLAY 0x5000
    {
    }
    INTSRAM_MULTIMEDIA 0x40000000 0x00020000
    {
    }
}
