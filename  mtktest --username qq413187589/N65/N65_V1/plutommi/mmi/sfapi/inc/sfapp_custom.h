//#include "VdoEdtDefs.h"
#include "VdoEdtResDef.h"
#include "ConnectManageGProt.h"
//#include "VdoPlyScrEnum.h"

//CMWAP Data Account，请改成符合手机实际情况的值！
#define SFCUST_WAP_ACCOUNT              10   
//CMNET Data Account，请改成符合手机实际情况的值!
#define SFCUST_NET_ACCOUNT              11 
//请不要修改此值
#define SFCUST_KEYPAD_UART_PORT         uart_port1
//25上请不要修改此值
#define SFCUST_SFAPP_PLAT_RT_MEM_SIZE   800
//用户不可见的目录，大多数情况可以不指定
//#define SFCUST_FOLDER_APPPRIVATE          L"C:\\"
//存储卡目录，大多数情况可以不指定
//#define SFCUST_FOLDER_APPDATA               L"E:\\"
//存储卡目录，大多数情况可以不指定
//#define SFCUST_FOLDER_APPCONFIG           L"E:\\"
//建议存储卡目录，大多数情况可以不指定
//#define SFCUST_SFAPP_PLAT_DEFAULT_DRV 'E'

#define SFCUST_APP_MOD      MOD_MMI
#define SFCUST_TRACE_MOD    MOD_NIL

#define SFCUST_UI_SCREEN_ID  SCR_ID_GAME
#define SFCUST_MAIN_SCREEN_ID   SCR_ID_VDOEDT_APP

//手机内用USB课间盘符
#define SFCUST_VFS_LOCAL_DRV    'C' //MMI_PUBLIC_DRV
#define SFCUST_VFS_CARD_DRV     'E' //MMI_CARD_DRV
#define SFCUST_APPPLAT_DEFAULT_DRV  SFCUST_VFS_CARD_DRV

//两个屏幕ID
#define ID_SCR_SFAPP    SCR_ID_VDOEDT_APP
#define ID_SCR_SFAPP_DA SCR_ID_VDOEDT_APP

//启用以下宏将使用静态存储空间
//#define SFCUST_APPPLAT_STATIC_HEAP
//#define SFCUST_SFAPP_STATIC_HEAP

#define SF_DEFAULT_WORKMEM_SIZE  (500*1024)


#define SFCUST_SYSALLOC_USE_MEDIA_SPACE
//#define SFCUST_SYSALLOC_USE_MANAGED_SPACE


///////////////////////////////////////////////////////////////////////////////////////////////////////////////


#define SFMODID_GAME_MAJIANG    SFMODID(0x00000001,0x00010000)
#define SFMODID_GAME_RABBIT     SFMODID(0x00000001,0x00010001)
#define SFMODID_APP_STOCK       SFMODID(0x00000001,0x00010002)
#define SFMODID_GAME_KNIGHT     SFMODID(0x00000001,0x00010003)
#define SFMODID_GAME_NESEMU     SFMODID(0x00000001,0x00010004)
#define SFMODID_APP_PLATFORM    SFMODID(0x00000001,0x00010005)
#define SFMODID_APP_TEST3D      SFMODID(0x00000001,0x00010006)
#define SFMODID_APP_MEDIAPLAYER SFMODID(0x00000001,0x00010007)

extern ISFApplication* SFMajiang_Create(void);
extern ISFApplication* SFRabbit_Create(void);
extern ISFApplication* SFStock_Create(void);
extern ISFApplication* SFKnight_Create(void);
extern ISFApplication* SFNesEmuApp_Create(void);
extern void SFAppPlatform_Entry(void);
extern ISFApplication* SFAppTest3D_Create(void);



#ifdef __SF_MTK_APPLICATION_MAJIANG__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_MAJIANG      \
    {SFMODID_GAME_MAJIANG,SFMOD_ATTR_APPLICATION,300,(SF_FUNC_VOID__VOID)&SFMajiang_Create,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_LEGACY_APP_MAJIANG
#endif

#ifdef __SF_MTK_APPLICATION_RABBIT__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_RABBIT       \
    {SFMODID_GAME_RABBIT,SFMOD_ATTR_APPLICATION,300,(SF_FUNC_VOID__VOID)&SFRabbit_Create,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_LEGACY_APP_RABBIT
#endif

#ifdef __SF_MTK_APPLICATION_STOCK__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_STOCK        \
    {SFMODID_APP_STOCK,SFMOD_ATTR_APPLICATION,500,(SF_FUNC_VOID__VOID)&SFStock_Create,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_LEGACY_APP_STOCK
#endif

#ifdef __SF_MTK_APPLICATION_KNIGHT__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_KNIGHT       \
    {SFMODID_GAME_KNIGHT,SFMOD_ATTR_APPLICATION,500,(SF_FUNC_VOID__VOID)&SFKnight_Create,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_LEGACY_APP_KNIGHT
#endif

#ifdef __SF_MTK_APPLICATION_EMU__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_NESEMU       \
    {SFMODID_GAME_NESEMU,SFMOD_ATTR_APPLICATION|SFMOD_ATTR_FAST_SCREEN_UPDATE,800,(SF_FUNC_VOID__VOID)&SFNesEmuApp_Create,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_LEGACY_APP_NESEMU
#endif

#ifdef __SF_MTK_APPLICATION_3D__ENABLE__
#define SFCUST_BUILTIN_LEGACY_APP_TEST3D        \
    {SFMODID_APP_TEST3D,SFMOD_ATTR_APPLICATION|SFMOD_ATTR_DYNAMIC_MEMORY,800,(SF_FUNC_VOID__VOID)&SFAppTest3D_Create,SF_DEFAULT_APP_RIGHTS},
#else
//SFMOD_ATTR_FAST_SCREEN_UPDATE
#define SFCUST_BUILTIN_LEGACY_APP_TEST3D
#endif 

#ifdef __SF_APPLICATION_PLATFORM__ENABLE__
#define SFCUST_BUILTIN_NATIVE_APP_PLATFORM     \
    {SFMODID_APP_PLATFORM,SFMOD_ATTR_APPLICATION|SFMOD_ATTR_NATIVE,0,&SFAppPlatform_Entry,SF_DEFAULT_NO_RIGHTS},
#else
#define SFCUST_BUILTIN_NATIVE_APP_PLATFORM
#endif

#ifdef __SF_MTK_APPLICATION_MEDIAPLAYER__ENABLE__
#define SFCUST_BUILTIN_APP_MEDIAPLAYER     \
    {SFMODID_APP_PLATFORM,SFMOD_ATTR_APPLICATION|SFMOD_ATTR_FAST_SCREEN_UPDATE|SFMOD_ATTR_NATIVE|SFMOD_ATTR_NATIVE_SFAPI_COMPATIBILITY,0,NULL,SF_DEFAULT_APP_RIGHTS},
#else
#define SFCUST_BUILTIN_APP_MEDIAPLAYER
#endif

#define SFCUST_BUILTIN_APP_LIST \
    SFCUST_BUILTIN_LEGACY_APP_MAJIANG\
    SFCUST_BUILTIN_LEGACY_APP_NESEMU\
    SFCUST_BUILTIN_LEGACY_APP_KNIGHT\
    SFCUST_BUILTIN_LEGACY_APP_RABBIT\
    SFCUST_BUILTIN_LEGACY_APP_STOCK\
    SFCUST_BUILTIN_LEGACY_APP_TEST3D\
    SFCUST_BUILTIN_NATIVE_APP_PLATFORM

#ifdef __SF_MTK_APPLICATION_EMU__ENABLE__
//#define SFCUST_NESEMU_KEYMAP
#ifdef SFCUST_NESEMU_KEYMAP
static const SFDeviceKeyMap s_nesemu_keymap_normal[]=
{
    {DEVICE_KEY_UP,SFKEY_NES_UP},
    {DEVICE_KEY_DOWN,SFKEY_NES_DOWN},
    {DEVICE_KEY_LEFT,SFKEY_NES_LEFT},
    {DEVICE_KEY_RIGHT,SFKEY_NES_RIGHT},
    {DEVICE_KEY_1,SFKEY_NES_A},
    {DEVICE_KEY_2,SFKEY_NES_B},
    {DEVICE_KEY_4,SFKEY_NES_A},
    {DEVICE_KEY_5,SFKEY_NES_B},
    {DEVICE_KEY_7,SFKEY_NES_SELECT},
    {DEVICE_KEY_8,SFKEY_NES_START},
    {_DEVICE_KEY_LAST_,0}
};
static const SFDeviceKeyMap s_nesemu_keymap_r90[]=
{
    {DEVICE_KEY_LEFT,SFKEY_NES_UP},
    {DEVICE_KEY_RIGHT,SFKEY_NES_DOWN},
    {DEVICE_KEY_DOWN,SFKEY_NES_LEFT},
    {DEVICE_KEY_UP,SFKEY_NES_RIGHT},
    {DEVICE_KEY_7,SFKEY_NES_A},
    {DEVICE_KEY_4,SFKEY_NES_B},
    {DEVICE_KEY_8,SFKEY_NES_A},
    {DEVICE_KEY_5,SFKEY_NES_B},
    {DEVICE_KEY_9,SFKEY_NES_SELECT},
    {DEVICE_KEY_6,SFKEY_NES_START},
    {_DEVICE_KEY_LAST_,0}
};
#endif
#endif 

//如果有我们的模拟器则请加键值于此
#if 0
#ifdef __SF_MTK_APPLICATION_EMU__ENABLE__
#define KEY_PUB_1 0xFFFE
#define REGISTER_PUB_1 KEY_REGISTER_LOW
#define KEY_PUB_2 0xFFFD
#define REGISTER_PUB_2 KEY_REGISTER_LOW
#define KEY_PUB_3 0xFFFB
#define REGISTER_PUB_3 KEY_REGISTER_LOW
#define KEY_PUB_OK 0xFFF7
#define REGISTER_PUB_OK KEY_REGISTER_LOW
#define KEY_PUB_CALL 0xFFDF
#define REGISTER_PUB_CALL KEY_REGISTER_LOW
#define KEY_PUB_4 0xFF7F
#define REGISTER_PUB_4 KEY_REGISTER_LOW
#define KEY_PUB_5 0xFEFF
#define REGISTER_PUB_5 KEY_REGISTER_LOW
#define KEY_PUB_6 0xFDFF
#define REGISTER_PUB_6 KEY_REGISTER_LOW
#define KEY_PUB_UP 0xFBFF
#define REGISTER_PUB_UP KEY_REGISTER_LOW
#define KEY_PUB_DOWN 0xF7FF
#define REGISTER_PUB_DOWN KEY_REGISTER_LOW
#define KEY_PUB_7 0xBFFF
#define REGISTER_PUB_7 KEY_REGISTER_LOW
#define KEY_PUB_8 0x7FFF
#define REGISTER_PUB_8 KEY_REGISTER_LOW
#define KEY_PUB_9 0xFFFE
#define REGISTER_PUB_9 KEY_REGISTER_MID
#define KEY_PUB_RIGHT 0xFFFD
#define REGISTER_PUB_RIGHT KEY_REGISTER_MID
#define KEY_PUB_RSK 0xFFF7
#define REGISTER_PUB_RSK KEY_REGISTER_MID
#define KEY_PUB_STAR 0xFFDF
#define REGISTER_PUB_STAR KEY_REGISTER_MID
#define KEY_PUB_0 0xFFBF
#define REGISTER_PUB_0 KEY_REGISTER_MID
#define KEY_PUB_POUND 0xFF7F
#define REGISTER_PUB_POUND KEY_REGISTER_MID
#define KEY_PUB_LEFT 0xFEFF
#define REGISTER_PUB_LEFT KEY_REGISTER_MID
#define KEY_PUB_LSK 0x03FD
#define REGISTER_PUB_LSK KEY_REGISTER_HIG
#define KEY_PUB_VOLUP 0x03F7
#define REGISTER_PUB_VOLUP KEY_REGISTER_HIG
#define KEY_PUB_VOLDOWN 0x03EF
#define REGISTER_PUB_VOLDOWN KEY_REGISTER_HIG

extern SFUint32 SFSystem_GetKeyStateEmu(void);

#define SFCUST_NESEMU_LEGACY_KEYMAP \
    return SFSystem_GetKeyStateEmu()|keyValue;

#endif //__SF_MTK_APPLICATION_EMU__ENABLE__
#endif

//如果内存实在很紧可以开启以下宏，请不到万不得已不要开启
//#define SFCUST_COMPACT_RAM

